#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	//Проверка Курса
	МаксимальныйКурс = Константы.КоличествоКурсовУниверситета.Получить();
	
	Если Курс > МаксимальныйКурс Тогда
	
		Сообщение = Новый СообщениеПользователю();
		
		Сообщение.Текст = СтрШаблон("Ошибка! Указанный курс выше максимального - %1", МаксимальныйКурс);
		Сообщение.Поле = "Объект.Курс";
		
		Сообщение.Сообщить();
		
		Отказ = Истина;
		
	КонецЕсли;
		
	//Создание ВТ со студентами
	МенеджерВТ = Новый МенеджерВременныхТаблиц();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	
	Запрос.Текст = "ВЫБРАТЬ
	|	ТЧСтуденты.НомерСтроки,
	|	ТЧСтуденты.Студент КАК Студент,
	|	ТЧСтуденты.Староста,
	|	ТЧСтуденты.ФормаОбучения,
	|	ТЧСтуденты.СуммаОбучения
	|ПОМЕСТИТЬ ДанныеДокумента
	|ИЗ
	|	&ТЧСтуденты КАК ТЧСтуденты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Студент";
	
	Запрос.УстановитьПараметр("ТЧСтуденты", Студенты);
	
	Запрос.Выполнить();
	
	//Проверка дублей студентов в ТЧ
	
	ЗапросДублейСтудентов = Новый Запрос;
	ЗапросДублейСтудентов.МенеджерВременныхТаблиц = МенеджерВТ;
	
	ЗапросДублейСтудентов.Текст = "ВЫБРАТЬ
	|	ДанныеДокумента.Студент
	|ПОМЕСТИТЬ ДублиСтудентов
	|ИЗ
	|	ДанныеДокумента КАК ДанныеДокумента
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокумента.Студент
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(ДанныеДокумента.Студент) > 1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДублиСтудентов.Студент КАК Студент,
	|	ДанныеДокумента.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	ДублиСтудентов КАК ДублиСтудентов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеДокумента КАК ДанныеДокумента
	|		ПО ДублиСтудентов.Студент = ДанныеДокумента.Студент
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки,
	|	Студент";
	
	ВыборкаДублей = ЗапросДублейСтудентов.Выполнить().Выбрать();
	
	Пока ВыборкаДублей.Следующий() Цикл
		
		Сообщение = Новый СообщениеПользователю();
		
		Сообщение.Текст = СтрШаблон("Студент %1 встречается в документе более одного раза!", 																				ВыборкаДублей.Студент);
		Сообщение.Поле 	= СтрШаблон("Студенты[%1].Студент", ВыборкаДублей.НомерСтроки - 1);
		
		Сообщение.ПутьКДанным 	= "Объект";
		Сообщение.КлючДанных 	= Ссылка;
		
		Сообщение.Сообщить();
		
		Отказ = Истина;
		
	КонецЦикла;
	
	// Проверка нескольких старост
																					
	ЗапросСтаросты = Новый Запрос;
	ЗапросСтаросты.МенеджерВременныхТаблиц = МенеджерВТ;
	
	ЗапросСтаросты.Текст = "ВЫБРАТЬ
	|	ДанныеДокумента.НомерСтроки КАК НомерСтроки,
	|	ДанныеДокумента.Студент КАК Студент
	|ИЗ
	|	ДанныеДокумента КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Староста = ИСТИНА
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки,
	|	Студент";
	
	ВыборкаСтарост = ЗапросСтаросты.Выполнить().Выбрать();
	
	Если ВыборкаСтарост.Количество() > 1 Тогда
		
		Пока ВыборкаСтарост.Следующий() Цикл
			
			Сообщение = Новый СообщениеПользователю();
			
			Сообщение.Текст = СтрШаблон("В группе может быть только один староста!");
			Сообщение.Поле	= СтрШаблон("Студенты[%1].Староста", ВыборкаСтарост.НомерСтроки - 1);
			
			Сообщение.ПутьКДанным 	= "Объект";
			Сообщение.КлючДанных	= Ссылка;
			
			Сообщение.Сообщить();
			
			Отказ = Истина;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Движения.Учащиеся.Очистить();
	Движения.Взаиморасчеты.Очистить();
    Движения.Учащиеся.Записывать = Истина;
	Движения.Взаиморасчеты.Записывать = Истина;
    Движения.Записать();

	//Запрос с табличной частью
	МенеджерВТ = Новый МенеджерВременныхТаблиц();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	
	Запрос.Текст = "ВЫБРАТЬ
	|	ПриказОЗачисленииСтуденты.НомерСтроки,
	|	ПриказОЗачисленииСтуденты.Ссылка,
	|	ПриказОЗачисленииСтуденты.Студент КАК Студент,
	|	ПриказОЗачисленииСтуденты.Староста,
	|	ПриказОЗачисленииСтуденты.ФормаОбучения,
	|	ПриказОЗачисленииСтуденты.СуммаОбучения
	|ПОМЕСТИТЬ ДанныеДокумента
	|ИЗ
	|	Документ.ПриказОЗачислении.Студенты КАК ПриказОЗачисленииСтуденты
	|ГДЕ
	|	ПриказОЗачисленииСтуденты.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Студент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокумента.Студент,
	|	ДанныеДокумента.Староста,
	|	ДанныеДокумента.ФормаОбучения,
	|	ДанныеДокумента.СуммаОбучения
	|ИЗ
	|	ДанныеДокумента КАК ДанныеДокумента";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатВыборкиДокумента = Запрос.Выполнить();
	
	ЗапросДублейСтудентов = Новый Запрос;
	ЗапросДублейСтудентов.МенеджерВременныхТаблиц = МенеджерВТ;
	
	ЗапросДублейСтудентов.Текст = "ВЫБРАТЬ
	|	Учащиеся.Студент,
	|	Учащиеся.Группа
	|ПОМЕСТИТЬ ДублиСтудентов
	|ИЗ
	|	РегистрСведений.Учащиеся КАК Учащиеся
	|ГДЕ
	|	Учащиеся.Студент В
	|		(ВЫБРАТЬ
	|			ДанныеДокумента.Студент
	|		ИЗ
	|			ДанныеДокумента КАК ДанныеДокумента)
	|	И НЕ Учащиеся.Регистратор = &Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокумента.НомерСтроки,
	|	ДублиСтудентов.Студент,
	|	ДублиСтудентов.Группа
	|ИЗ
	|	ДублиСтудентов КАК ДублиСтудентов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеДокумента КАК ДанныеДокумента
	|		ПО ДублиСтудентов.Студент = ДанныеДокумента.Студент";
	
	ЗапросДублейСтудентов.УстановитьПараметр("Регистратор", Ссылка);
	
	РезультатВыборки = ЗапросДублейСтудентов.Выполнить();
	
	Если Не РезультатВыборки.Пустой() Тогда
		
		Отказ = Истина;
		ВыборкаДублей = РезультатВыборки.Выбрать();
		
		Пока ВыборкаДублей.Следующий() Цикл
			
			Сообщение = Новый СообщениеПользователю();
			
			Сообщение.Текст = СтрШаблон("Студент %1 уже числиться группе %2",
																		ВыборкаДублей.Студент,
																		ВыборкаДублей.Группа);
			Сообщение.Поле = СтрШаблон("Студенты[%1].Студент", ВыборкаДублей.НомерСтроки - 1);
			
			Сообщение.ПутьКДанным 	= "Объект";
			Сообщение.КлючДанных 	= Ссылка;
			
			Сообщение.Сообщить();
			
		КонецЦикла;
		
	КонецЕсли;
	
	ЗапросДублейСтарост = Новый Запрос;
	ЗапросДублейСтарост.МенеджерВременныхТаблиц = МенеджерВТ;
	
	ЗапросДублейСтарост.Текст = "ВЫБРАТЬ
	|	Учащиеся.Студент,
	|	NULL КАК НомерСтроки
	|ИЗ
	|	РегистрСведений.Учащиеся КАК Учащиеся
	|ГДЕ
	|	Учащиеся.Факультет = &Факультет
	|	И Учащиеся.Группа = &Группа
	|	И Учащиеся.Курс = &Курс
	|	И Учащиеся.Староста = ИСТИНА
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.Студент,
	|	ДанныеДокумента.НомерСтроки
	|ИЗ
	|	ДанныеДокумента КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Староста = ИСТИНА";
	
	ЗапросДублейСтарост.УстановитьПараметр("Факультет", Факультет);
	ЗапросДублейСтарост.УстановитьПараметр("Группа", УчебнаяГруппа);
	ЗапросДублейСтарост.УстановитьПараметр("Курс", Курс);
	
	ВыборкаСтарост = ЗапросДублейСтарост.Выполнить().Выбрать();
	
	Если ВыборкаСтарост.Количество() > 1 Тогда
		
		Отказ = Истина;
		
		Пока ВыборкаСтарост.Следующий() Цикл
			
			Если ЗначениеЗаполнено(ВыборкаСтарост.НомерСтроки) Тогда
				Сообщение = Новый СообщениеПользователю();
				
				Сообщение.Текст = СтрШаблон("В группе %1 уже есть староста!",
																			УчебнаяГруппа);
				Сообщение.Поле = СтрШаблон("Студенты[%1].Студент", ВыборкаДублей.НомерСтроки - 1);
				
				Сообщение.ПутьКДанным 	= "Объект";
				Сообщение.КлючДанных 	= Ссылка;
				
				Сообщение.Сообщить();
			
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если Не Отказ Тогда
		
		ВыборкаДокумента = РезультатВыборкиДокумента.Выбрать();
		
		Пока ВыборкаДокумента.Следующий() Цикл
			
			// Движения в РС Учащиеся
			Движение 				= Движения.Учащиеся.Добавить();
	        Движение.Период 		= Дата;
	        Движение.Факультет 		= Факультет;
	        Движение.Группа			= УчебнаяГруппа;
			Движение.Курс			= Курс;
			Движение.Студент		= ВыборкаДокумента.Студент;
			Движение.Староста		= ВыборкаДокумента.Староста;
			Движение.ФормаОбучения	= ВыборкаДокумента.ФормаОбучения;
			
			//Движения в РН Взаиморасчеты
			Движение 				= Движения.Взаиморасчеты.ДобавитьПриход();
			Движение.ВидДвижения 	= ВидДвиженияНакопления.Приход;
			Движение.Период 		= Дата;
			Движение.Студент 		= ВыборкаДокумента.Студент;
			Движение.Сумма 			= ВыборкаДокумента.СуммаОбучения;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Движения.Учащиеся.Записывать = Истина;
	Движения.Взаиморасчеты.Записывать = Истина;
	
КонецПроцедуры

#КонецОбласти