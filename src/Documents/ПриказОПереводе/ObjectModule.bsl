#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МенеджерВТ = Новый МенеджерВременныхТаблиц();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	
	Запрос.Текст = "ВЫБРАТЬ
	|	ДанныеДокумента.НомерСтроки,
	|	ДанныеДокумента.Студент КАК Студент
	|ПОМЕСТИТЬ ДанныеДокумента
	|ИЗ
	|	&ТЧСтуденты КАК ДанныеДокумента
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Студент";
	
	Запрос.УстановитьПараметр("ТЧСтуденты", Студенты);
	
	Запрос.Выполнить();
	
	
	ЗапросДублей = Новый Запрос;
	ЗапросДублей.МенеджерВременныхТаблиц = МенеджерВТ;
	
	ЗапросДублей.Текст = "ВЫБРАТЬ
	|	ДанныеДокумента.Студент
	|ПОМЕСТИТЬ СтудентыДубли
	|ИЗ
	|	ДанныеДокумента КАК ДанныеДокумента
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокумента.Студент
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(ДанныеДокумента.Студент) > 1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокумента.НомерСтроки КАК НомерСтроки,
	|	ДанныеДокумента.Студент
	|ИЗ
	|	СтудентыДубли КАК СтудентыДубли
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеДокумента КАК ДанныеДокумента
	|		ПО ДанныеДокумента.Студент = СтудентыДубли.Студент
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	РезультатВыборки = ЗапросДублей.Выполнить();
	
	Если Не РезультатВыборки.Пустой() Тогда
		
		Отказ = Истина;
		Выборка = РезультатВыборки.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			Сообщение = Новый СообщениеПользователю();
			
			Сообщение.Текст = СтрШаблон("Студнет %1 встречается в табличной части более одного раза!",
																								Выборка.Студент);
			Сообщение.Поле = СтрШаблон("Студенты[%1].Студент", Выборка.НомерСтроки - 1);
			
			Сообщение.ПутьКДанным 	= "Объект";
			Сообщение.КлючДанных 	= Ссылка;
			
			Сообщение.Сообщить();
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Движения.Учащиеся.Очистить();
	Движения.Взаиморасчеты.Очистить();
    Движения.Учащиеся.Записывать = Истина;
	Движения.Взаиморасчеты.Записывать = Истина;
    Движения.Записать();
	
	МенеджерВТ = Новый МенеджерВременныхТаблиц();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	
	Запрос.Текст = "ВЫБРАТЬ
	|	ПриказОПереводеСтуденты.НомерСтроки,
	|	ПриказОПереводеСтуденты.Студент,
	|	Учащиеся.Староста КАК Староста,
	|	Учащиеся.ФормаОбучения
	|ПОМЕСТИТЬ ДанныеДокумента
	|ИЗ
	|	Документ.ПриказОПереводе.Студенты КАК ПриказОПереводеСтуденты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Учащиеся КАК Учащиеся
	|		ПО ПриказОПереводеСтуденты.Студент = Учащиеся.Студент
	|ГДЕ
	|	ПриказОПереводеСтуденты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокумента.НомерСтроки,
	|	ДанныеДокумента.Студент,
	|	ДанныеДокумента.Староста,
	|	ДанныеДокумента.ФормаОбучения
	|ИЗ
	|	ДанныеДокумента КАК ДанныеДокумента";
	
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатДок = Запрос.Выполнить();
	
	//Проверка числится студент в группе
	ЗапросСтудентов = Новый Запрос;
	ЗапросСтудентов.МенеджерВременныхТаблиц = МенеджерВТ;
	
	ЗапросСтудентов.Текст = "ВЫБРАТЬ
	|	Учащиеся.Студент
	|ПОМЕСТИТЬ СтудентыЧислятся
	|ИЗ
	|	РегистрСведений.Учащиеся КАК Учащиеся
	|ГДЕ
	|	Учащиеся.Факультет = &Факультет
	|	И Учащиеся.Группа = &Группа
	|	И Учащиеся.Курс = &Курс
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокумента.Студент,
	|	ДанныеДокумента.НомерСтроки
	|ИЗ
	|	ДанныеДокумента КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Студент НЕ В
	|		(ВЫБРАТЬ
	|			СтудентыЧислятся.Студент
	|		ИЗ
	|			СтудентыЧислятся КАК СтудентыЧислятся)";
	
	ЗапросСтудентов.УстановитьПараметр("Факультет", ТекущийФакультет);
	ЗапросСтудентов.УстановитьПараметр("Группа", ТекущаяГруппа);
	ЗапросСтудентов.УстановитьПараметр("Курс", ТекущийКурс);
	
	РезультатЗапроса= ЗапросСтудентов.Выполнить();
	
	Если Не РезультатЗапроса.Пустой() Тогда
		
		Отказ = Истина;
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл 
			
			Сообщение = Новый СообщениеПользователю();
			
			Сообщение.Текст = СтрШаблон("Студент %1 не числится в группе %2", 
																	Выборка.Студент, 
																	ТекущаяГруппа);
			Сообщение.Поле = СтрШаблон("Студенты[%1].Студент", Выборка.НомерСтроки - 1);
			
			Сообщение.ПутьКДанным 	= "Объект";
			Сообщение.КлючДанных 	= Ссылка;
			
			Сообщение.Сообщить();
			
		КонецЦикла;
																			
	КонецЕсли;
	
	Если Не Отказ Тогда
		
		ВыборкаДок = РезультатДок.Выбрать();
		
		Пока ВыборкаДок.Следующий() Цикл
			
			// Движения в Учащиеся
			Движение 				= Движения.Учащиеся.Добавить();
	        Движение.Период 		= Дата;
	        Движение.Факультет 		= БудущийФакультет;
	        Движение.Группа			= БудущаяГруппа;
			Движение.Курс			= БудущийКурс;
			Движение.Студент		= ВыборкаДок.Студент;
			Движение.Староста		= ВыборкаДок.Староста;
			Движение.ФормаОбучения	= ВыборкаДок.ФормаОбучения;
			
			// Движения в Взаиморасчтеах
			
			Если ТекущийФакультет <> БудущийФакультет И ТекущийКурс = БудущийКурс Тогда
		
				Период = НачалоГода(ТекущаяДатаСеанса());
				
				ТекущаяСтоимостьОбучения = РегистрыСведений.ЦеныНаОбучение.Получить(Период, Новый Структура(
																					"Факультет", ТекущийФакультет));
				БудущаяСтоимостьОбучения = РегистрыСведений.ЦеныНаОбучение.Получить(Период, Новый Структура(
																					"Факультет", БудущийФакультет));
				
				Если ТекущаяСтоимостьОбучения.Цена <> БудущаяСтоимостьОбучения.Цена Тогда
																																													
					Разница = БудущаяСтоимостьОбучения.Цена - ТекущаяСтоимостьОбучения.Цена;
					
					Движение 				= Движения.Взаиморасчеты.Добавить();
					
					Движение.Период 		= Дата;
					 
					Если Разница > 0 Тогда
						
						Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
						
					Иначе
						
						Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
						Разница = Разница * -1;
						
					КонецЕсли;
					
					Движение.Студент		= ВыборкаДок.Студент;
					Движение.Сумма			= Разница;
				
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Движения.Учащиеся.Записывать = Истина;
	Движения.Взаиморасчеты.Записывать = Истина;
	
КонецПроцедуры

#КонецОбласти
